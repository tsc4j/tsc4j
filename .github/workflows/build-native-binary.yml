#
# CI github action
#

name: tsc4j native binary
on:
  create:
    tags:
      - 'v*'

jobs:
  build:
    name:     Native binary on on ${{ matrix.os }}
    runs-on:  ${{ matrix.os }}

    strategy:
      matrix:
        os:   [ macos-12, ubuntu-22.04 ]

    env:
      AWS_ACCESS_KEY_ID:      foo
      AWS_SECRET_ACCESS_KEY:  bar
      AWS_REGION:             us-west-1
      IS_PR_MERGE:            ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true }}
      IS_GIT_TAG:             ${{ startsWith(github.ref, 'refs/tags/v') }}
      IS_PR_MERGE_OR_TAG:     ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true || startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - uses: actions/checkout@v2

      - name: Restore build dependencies
        id: restore-caches
        uses: actions/cache@v2
        with:
          path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
             ~/.cache/google-cloud-tools-java
          key: gradle-${{ hashFiles('build.gradle', 'gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Warn about missing caches
        if: steps.restore-caches.outputs.cache-hit != 'true'
        run: |
          echo "WARNING: Build cache was not restored."

      - uses: graalvm/setup-graalvm@v1
        with:
          version:      '22.1.0'
          java-version: '11'
          components:   'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build uber-jar
        run: ./gradlew clean tsc4j-uberjar:shadowJar -s

      - name: Build native image binary
        run: ./native_img_build.sh

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: tsc4j-native-binary
          path: build/tsc4j-*-*

# vim:shiftwidth=2 softtabstop=2 expandtab
# EOF
