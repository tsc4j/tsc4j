//
// build.gradle
//

plugins {
  id "application"
  id "com.github.johnrengelman.shadow"
}

description = "Command line uberjar"
publishing.publications.mavenJava.pom.description = rootProject.name + ' :: ' + description

configurations {
  all*.exclude group: "commons-logging", module: "commons-logging"

  // aws sdk 2.x
  all*.exclude group: "io.netty"
  all*.exclude group: "software.amazon.awssdk", module: "netty-nio-client"
}

dependencies {
  // required tsc4j dependencies
  implementation          project(":${rootProject.name}-cli")

  ////////////////////////////////////////////////////////////////////
  // BEGIN: optional tsc4j dependencies
  //        choose only the ones that you actually need

  // AWS platform support
  implementation          project(":${rootProject.name}-aws2")

  // credstash support
  //implementation          project(":${rootProject.name}-credstash")

  // GCP platform support
  //implementation        project(":${rootProject.name}-gcp")

  // END:   optional tsc4j dependencies
  ////////////////////////////////////////////////////////////////////

  // generates graal native-image configurations
  annotationProcessor     "info.picocli:picocli-codegen"

  // JDK11 compatibility
  implementation          "jakarta.xml.bind:jakarta.xml.bind-api"

  // logging
  implementation          "org.slf4j:jcl-over-slf4j"
  implementation          "ch.qos.logback:logback-classic:1.2.10"
}

compileJava {
  // for picocli-codegen
  options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

// don't create javadoc jar
javadoc.enabled = false

// don't publish anything
tasks.withType(AbstractPublishToMaven).all { it.onlyIf { false } }

////////////////////////////////////////////////////////////////////////////////
//                              shadow plugin                                 //
////////////////////////////////////////////////////////////////////////////////

mainClassName = "com.github.tsc4j.cli.Tsc4jCli"

shadowJar {
  mergeServiceFiles()

  preserveFileTimestamps  = false
  archiveBaseName         = "tsc4j"
  archiveClassifier       = ''      // don't append -all to jar filename
  archiveVersion          = ''      // don't append version to jar filename
}

// application/shadowJar plugins: disable creation of distribution archives
distZip.enabled = distTar.enabled = shadowDistTar.enabled = shadowDistZip.enabled = false

// run `shadowJar` task only if that was user's preference, i.e. if user explicitly
// asked for it by manually specifying it as a cli parameter
def shadowJarEnabled = gradle.startParameter.taskRequests
  .find {it.args.find {it.contains("shadowJar")} != null  } != null
if (!shadowJarEnabled) {
  gradle.startParameter.excludedTaskNames += "shadowJar"
}

// vim:shiftwidth=2 softtabstop=2 expandtab
// EOF
